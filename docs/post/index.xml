<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 統計とかのメモ</title>
    <link>/post/index.xml</link>
    <description>Recent content in Posts on 統計とかのメモ</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Except where otherwise noted, content on this site is licensed under a [Creative Commons Attribution 4.0 International license](https://creativecommons.org/licenses/by-sa/4.0/).</copyright>
    <lastBuildDate>Wed, 19 Apr 2017 20:30:40 +0900</lastBuildDate>
    <atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>sf,instead of sp</title>
      <link>/2017/04/sfinstead-of-sp/</link>
      <pubDate>Wed, 19 Apr 2017 20:30:40 +0900</pubDate>
      
      <guid>/2017/04/sfinstead-of-sp/</guid>
      <description>&lt;!-- BLOGDOWN-BODY-BEFORE

/BLOGDOWN-BODY-BEFORE --&gt;

&lt;p&gt;今話題の&lt;strong&gt;sf&lt;/strong&gt;パッケージ、まさか知らない人はいないでしょう&lt;a href=&#34;http://notchained.hatenablog.com/entry/2017/01/06/213333&#34;&gt;??&lt;/a&gt;。&lt;br /&gt;
今回はじめて使いましたので、簡単にメモ。&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(dplyr)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
##  次のパッケージを付け加えます: &amp;#39;dplyr&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  以下のオブジェクトは &amp;#39;package:stats&amp;#39; からマスクされています: 
## 
##      filter, lag&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  以下のオブジェクトは &amp;#39;package:base&amp;#39; からマスクされています: 
## 
##      intersect, setdiff, setequal, union&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(sf)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Linking to GEOS 3.5.0, GDAL 2.1.1, proj.4 4.9.3&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Shapeファイルからの読み込みの例が多かったので、&lt;br /&gt;
data.frameから作る場合をやってみます。 irisに適当に座標をつけます。&lt;br /&gt;
この場合はst_as_sf()で簡単に作ることができます。 SP*オブジェクトよりもスッキリしてる気がします。&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;iris_sf_wgs&amp;lt;- iris %&amp;gt;% 
  mutate(x = rnorm(dim(iris)[1],140,1),
         y = rnorm(dim(iris)[1],35,1)) %&amp;gt;% 
  st_as_sf(coords = c(&amp;quot;x&amp;quot;,&amp;quot;y&amp;quot;),
           crs = 4326)
iris_sf_wgs %&amp;gt;% 
  head()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Simple feature collection with 6 features and 5 fields
## geometry type:  POINT
## dimension:      XY
## bbox:           xmin: 138.7596 ymin: 33.80348 xmax: 141.7678 ymax: 36.31975
## epsg (SRID):    4326
## proj4string:    +proj=longlat +datum=WGS84 +no_defs
##   Sepal.Length Sepal.Width Petal.Length Petal.Width Species
## 1          5.1         3.5          1.4         0.2  setosa
## 2          4.9         3.0          1.4         0.2  setosa
## 3          4.7         3.2          1.3         0.2  setosa
## 4          4.6         3.1          1.5         0.2  setosa
## 5          5.0         3.6          1.4         0.2  setosa
## 6          5.4         3.9          1.7         0.4  setosa
##                         geometry
## 1 POINT(139.365039684377 33.8...
## 2 POINT(140.214536836506 36.3...
## 3 POINT(140.153729658544 34.3...
## 4 POINT(141.767759920242 35.4...
## 5 POINT(138.759600487672 34.5...
## 6 POINT(138.872964867377 34.1...&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;geometryに座標が入りました。postGISみたいなやつですね。 投影変換はst_transformです。crsに直接EPSGコードをぶち込めます。&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;iris_sf_wgs %&amp;gt;% 
  st_transform(crs = 32654) %&amp;gt;% 
  head()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Simple feature collection with 6 features and 5 fields
## geometry type:  POINT
## dimension:      XY
## bbox:           xmin: 294476.4 ymin: 3741568 xmax: 569669.5 ymax: 4019700
## epsg (SRID):    32654
## proj4string:    +proj=utm +zone=54 +datum=WGS84 +units=m +no_defs
##   Sepal.Length Sepal.Width Petal.Length Petal.Width Species
## 1          5.1         3.5          1.4         0.2  setosa
## 2          4.9         3.0          1.4         0.2  setosa
## 3          4.7         3.2          1.3         0.2  setosa
## 4          4.6         3.1          1.5         0.2  setosa
## 5          5.0         3.6          1.4         0.2  setosa
## 6          5.4         3.9          1.7         0.4  setosa
##                         geometry
## 1 POINT(348660.262983917 3741...
## 2 POINT(429494.283147815 4019...
## 3 POINT(422202.792112733 3805...
## 4 POINT(569669.470954922 3923...
## 5 POINT(294476.374398475 3827...
## 6 POINT(303986.204951326 3784...&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;plotでの描画はこの通り。&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(iris_sf_wgs %&amp;gt;% select(Species))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/2017/04/sfinstead-of-sp/figures/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;ggplotで扱うにはまだ開発中である&lt;a href=&#34;https://dcl-2017-01.github.io/curriculum/notes/spatial-vis.html&#34;&gt;geom_sf&lt;/a&gt;があります。&lt;/p&gt;
&lt;p&gt;Happy mapping!&lt;/p&gt;


&lt;!-- BLOGDOWN-HEAD




/BLOGDOWN-HEAD --&gt;
</description>
    </item>
    
    <item>
      <title>Maxent 3.40</title>
      <link>/2017/03/maxent-3.40/</link>
      <pubDate>Thu, 23 Mar 2017 18:23:43 +0900</pubDate>
      
      <guid>/2017/03/maxent-3.40/</guid>
      <description>&lt;!-- BLOGDOWN-BODY-BEFORE

/BLOGDOWN-BODY-BEFORE --&gt;

&lt;div id=&#34;maxent&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Maxentとは&lt;/h3&gt;
&lt;p&gt;在データだけで分布予測をするすごいやつ。&lt;br /&gt;
不在データが取りにくい野生生物を対象とする生態学などで大人気です。&lt;br /&gt;
今回はバージョンアップでオープンソース化&amp;amp;Rパッケージがでたのでその紹介です。 くわしくは元論文を読みましょう? &lt;a href=&#34;http://biodiversityinformatics.amnh.org/open_source/maxent/&#34;&gt;Maxent website&lt;/a&gt;&lt;/p&gt;
&lt;div id=&#34;install&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Install&lt;/h4&gt;
&lt;p&gt;Rパッケージの名前注意してください。eとnが逆で、max&lt;strong&gt;ne&lt;/strong&gt;tとなっています。max&lt;strong&gt;en&lt;/strong&gt;tは別のやつです。&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;install.packages(&amp;quot;maxnet&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;data&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Data&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;http://biodiversityinformatics.amnh.org/open_source/maxent/Maxent_tutorial2017.pdf&#34;&gt;チュートリアルテキスト&lt;/a&gt;が、RのコードではなくJSのGUIの操作法になっています。&lt;br /&gt;
&lt;a href=&#34;http://biodiversityinformatics.amnh.org/open_source/maxent/tutorial-data.zip&#34;&gt;チュートリアルデータ&lt;/a&gt;をダウンロードしてください。解凍後、ワーキングディレクトリを指定してください。&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(maxnet)
library(tidyverse)
library(magrittr)
library(raster)
d &amp;lt;- read_csv(&amp;quot;samples/bradypus.csv&amp;quot;) %&amp;gt;%
  dplyr::select(-species) %&amp;gt;% 
  set_colnames(c(&amp;quot;long&amp;quot;,&amp;quot;lat&amp;quot;))
p &amp;lt;- SpatialPoints(d[,c(&amp;quot;long&amp;quot;,&amp;quot;lat&amp;quot;)],proj4string = CRS(&amp;quot;+init=epsg:4326&amp;quot;))
r &amp;lt;- stack(dir(&amp;quot;layers&amp;quot;,pattern = &amp;quot;asc$&amp;quot;,full.names = TRUE))
crs(r) &amp;lt;- CRS(&amp;quot;+init=epsg:4326&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;pとrにsp&amp;amp;rasterオブジェクトとして読み込みました。 pはノドチャミユビナマケモノ&lt;em&gt;Bradypus variegatus&lt;/em&gt;の位置データです。 rは標高や気候などの説明変数のようです。プロットしてみましょう。&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(r[[&amp;quot;h_dem&amp;quot;]])
plot(p,add=TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/2017/03/maxent-3.40/figures/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(r)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/2017/03/maxent-3.40/figures/unnamed-chunk-4-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;run&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Run&lt;/h4&gt;
&lt;p&gt;Maxentは不在データの代わりに対象地域内に十分な数のランダムなポイントを落とし、それを“背景データ”として使います。&lt;br /&gt;
GUIのソフトの方は上のようなGISデータ形式そのまんまで解析してくれますが、&lt;br /&gt;
Rパッケージの関数の方はglmnetのラッパーみたいなので、位置情報から説明変数を取ってきてあげないといけません。&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;train &amp;lt;- raster::extract(r,p) %&amp;gt;% 
  data.frame(.,presence = 1)
set.seed(123)
bg &amp;lt;- sampleRandom(r,1000,na.rm = TRUE) %&amp;gt;% 
  data.frame(.,presence = 0)
d &amp;lt;- rbind(train,bg) %&amp;gt;% 
  filter(complete.cases(.))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;元のラスターが陸地と気象データのNAの箇所が微妙に違うようなのでNAを丁寧に取り除きます。&lt;br /&gt;
dにデータが揃ったので、モデルをつくって予測してみましょう。&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mod &amp;lt;- maxnet(p = d %&amp;gt;% use_series(presence),data =  d %&amp;gt;% dplyr::select(-presence))
r %&amp;gt;% 
  getValues() %&amp;gt;% 
  data.frame() %&amp;gt;% 
  mutate(n = row_number()) %&amp;gt;% 
  filter(complete.cases(.)) -&amp;gt; r_d
pre &amp;lt;- predict(mod,r_d %&amp;gt;% dplyr::select(-n),type=&amp;quot;cloglog&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;result&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Result&lt;/h4&gt;
&lt;p&gt;dplyrとrasterパッケージが噛み合わなくて色々つらいですが、ラスターにMaxentの結果を戻します。&lt;br /&gt;
preの中身は種の存在する確率となります。&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;pre_r &amp;lt;- r[[1]]
pre_r[] &amp;lt;- NA
pre_r[r_d$n] &amp;lt;- pre
plot(pre_r)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/2017/03/maxent-3.40/figures/unnamed-chunk-7-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;これでナマケモノの分布確率の地図が作れました。&lt;br /&gt;
AUCのプロットから2値化したり、CVしたりAICだしたり寄与率をみたいと思いますが、それはつぎの機会に!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;!-- BLOGDOWN-HEAD




/BLOGDOWN-HEAD --&gt;
</description>
    </item>
    
    <item>
      <title>multico_1</title>
      <link>/2017/01/multico_1/</link>
      <pubDate>Sat, 14 Jan 2017 13:54:58 +0900</pubDate>
      
      <guid>/2017/01/multico_1/</guid>
      <description>&lt;!-- BLOGDOWN-BODY-BEFORE

/BLOGDOWN-BODY-BEFORE --&gt;

&lt;div class=&#34;section level4&#34;&gt;
&lt;h4&gt;はじめに&lt;/h4&gt;
&lt;p&gt;今持っているデータが多重共線性のあるデータで変数選択に苦しんでいます。&lt;br /&gt;
変数選択以外の回避法を調べると、リッジ回帰なら大丈夫!みたいな記述があり、&lt;br /&gt;
階層ベイズでリッジ回帰的なのもできるよとのことなので、&lt;br /&gt;
多重共線性のあるデータで真値が推定できるかやってみたいと思います。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;section level4&#34;&gt;
&lt;h4&gt;データ生成&lt;/h4&gt;
&lt;p&gt;適当にRでつくります。が、けっこう大変でした。&lt;br /&gt;
x1~x4の4つの説明変数と、目的変数yを作ります。&lt;br /&gt;
係数の真値は全て2にしてみます。切片は平均1、分散1の正規分布からなります。&lt;br /&gt;
コードチャンクも数式がうまく出ませんので心の目で見てください。&lt;br /&gt;
&lt;span class=&#34;math display&#34;&gt;\[y = N(1,1) + 2*x1 + 2*x2 + 2*x3 + 2*x4\]&lt;/span&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;require(dplyr);require(magrittr)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  要求されたパッケージ dplyr をロード中です&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: パッケージ &amp;#39;dplyr&amp;#39; はバージョン 3.3.1 の R の下で造られました&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
##  次のパッケージを付け加えます: &amp;#39;dplyr&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  以下のオブジェクトは &amp;#39;package:stats&amp;#39; からマスクされています: 
## 
##      filter, lag&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  以下のオブジェクトは &amp;#39;package:base&amp;#39; からマスクされています: 
## 
##      intersect, setdiff, setequal, union&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  要求されたパッケージ magrittr をロード中です&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;nobs &amp;lt;- 100
M &amp;lt;- matrix(c(1, 0.95, 0.95, 0.95,
             0.95, 1, 0.95, 0.95,
             0.95, 0.95, 1, 0.95,
             0.95, 0.95, 0.95, 1), nrow&amp;lt;-4, ncol&amp;lt;-4)
L &amp;lt;- chol(M)
nvars &amp;lt;- dim(L)[1]
set.seed(0)
L %&amp;gt;% 
  t() %*% #help ?&amp;#39;%*%&amp;#39;
  matrix(rnorm(nvars*nobs), nrow=nvars, ncol=nobs) %&amp;gt;% 
  t() %&amp;gt;% 
  data.frame() %&amp;gt;% 
  set_colnames(c(&amp;#39;x1&amp;#39;, &amp;#39;x2&amp;#39;, &amp;#39;x3&amp;#39;, &amp;#39;x4&amp;#39;)) %&amp;gt;% 
  mutate(x0 = 1,
         y = 2*x1+2*x2+2*x3+2*x4+rnorm(nobs,1,1))-&amp;gt; dat
dat %&amp;gt;% head&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##             x1          x2         x3            x4 x0          y
## 1  1.262954285  1.09794024  1.5128002  1.5967999876  1 11.5509799
## 2  0.414641434 -0.08693988 -0.0935600  0.0007692272  1 -0.3494007
## 3 -0.005767173  0.74537397  0.5685444  0.2226740702  1  4.7208311
## 4 -1.147657009 -1.18065851 -1.2159001 -1.2670585379  1 -8.1629265
## 5  0.252223448 -0.03889001  0.2227375 -0.1759908437  1  3.1367865
## 6 -0.224267885 -0.09521274 -0.1192851  0.0634592462  1 -1.6068035&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;vif&#34; class=&#34;section level5&#34;&gt;
&lt;h5&gt;VIF&lt;/h5&gt;
&lt;p&gt;以下のコードでVIFが求められます。多分。&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#cor
cor(dat[,-c(5:7)])&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##           x1        x2        x3        x4
## x1 1.0000000 0.9427774 0.9401316 0.9374005
## x2 0.9427774 1.0000000 0.9355453 0.9400460
## x3 0.9401316 0.9355453 1.0000000 0.9499916
## x4 0.9374005 0.9400460 0.9499916 1.0000000&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#VIF
diag(solve(cor(dat[,-c(5:7)]))) %&amp;gt;% round(2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    x1    x2    x3    x4 
## 12.54 12.32 13.57 13.80&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;section level4&#34;&gt;
&lt;h4&gt;モデル&lt;/h4&gt;
&lt;p&gt;階層ベイズ(係数の事前分布2種)&lt;/p&gt;
&lt;div class=&#34;section level5&#34;&gt;
&lt;h5&gt;事前分布が無情報(デフォルト)&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;data {
  int&amp;lt;lower=0&amp;gt; N;
  int&amp;lt;lower=0&amp;gt; K;
  matrix[N, K] x;
  vector[N] y;
}
parameters {
  vector[K] beta;
  real&amp;lt;lower=0&amp;gt; sigma;
}
model {
  y ~ normal(x * beta , sigma);
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;n010&#34; class=&#34;section level5&#34;&gt;
&lt;h5&gt;事前分布が正規分布N(0,10)&lt;/h5&gt;
&lt;p&gt;正規分布にするとRidge回帰と同じらしい。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;//model部以外同じ
model {
  y ~ normal(x * beta , sigma);
  beta ~ normal(0,10);
  sigma ~ normal(0,100);
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;section level4&#34;&gt;
&lt;h4&gt;結果&lt;/h4&gt;
&lt;p&gt;(ブログ移行するときにデータ無くした。)&lt;/p&gt;
&lt;p&gt;beta[1]が切片,beta[2:5]がx1:x4です。&lt;br /&gt;
beta[1]が1,beta[2:5]は2が真値でした。 どちらのモデルもうまく推定できず、数値見てもほとんどおんなじでした。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;section level4&#34;&gt;
&lt;h4&gt;まとめ&lt;/h4&gt;
&lt;p&gt;betaの制約を見ても明らかですが、 モデルが過学習起こして値が変なとこ飛んでかないようになるだけであって, 真値を正しく推定するようになるわけではないので、やっぱりちゃんと変数選択しよう!&lt;br /&gt;
次回Lasso回帰!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;section level4&#34;&gt;
&lt;h4&gt;参考資料&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;http://www.quantumforest.com/2011/10/simulating-data-following-a-given-covariance-structure/&#34; class=&#34;uri&#34;&gt;http://www.quantumforest.com/2011/10/simulating-data-following-a-given-covariance-structure/&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;http://breakbee.hatenablog.jp/entry/2015/03/08/041411&#34; class=&#34;uri&#34;&gt;http://breakbee.hatenablog.jp/entry/2015/03/08/041411&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;http://www.fisproject.jp/2014/08/r-regression/&#34; class=&#34;uri&#34;&gt;http://www.fisproject.jp/2014/08/r-regression/&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;


&lt;!-- BLOGDOWN-HEAD




/BLOGDOWN-HEAD --&gt;
</description>
    </item>
    
  </channel>
</rss>
