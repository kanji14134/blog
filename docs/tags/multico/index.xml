<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Multico on 統計とかのメモ</title>
    <link>/tags/multico/index.xml</link>
    <description>Recent content in Multico on 統計とかのメモ</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="/tags/multico/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>multico_1</title>
      <link>/2017/01/multico_1/</link>
      <pubDate>Sat, 14 Jan 2017 13:54:58 +0900</pubDate>
      
      <guid>/2017/01/multico_1/</guid>
      <description>&lt;!-- BLOGDOWN-BODY-BEFORE

/BLOGDOWN-BODY-BEFORE --&gt;

&lt;div class=&#34;section level4&#34;&gt;
&lt;h4&gt;はじめに&lt;/h4&gt;
&lt;p&gt;今持っているデータが多重共線性のあるデータで変数選択に苦しんでいます。&lt;br /&gt;
変数選択以外の回避法を調べると、リッジ回帰なら大丈夫!みたいな記述があり、&lt;br /&gt;
階層ベイズでリッジ回帰的なのもできるよとのことなので、&lt;br /&gt;
多重共線性のあるデータで真値が推定できるかやってみたいと思います。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;section level4&#34;&gt;
&lt;h4&gt;データ生成&lt;/h4&gt;
&lt;p&gt;適当にRでつくります。が、けっこう大変でした。&lt;br /&gt;
x1~x4の4つの説明変数と、目的変数yを作ります。&lt;br /&gt;
係数の真値は全て2にしてみます。切片は平均1、分散1の正規分布からなります。&lt;br /&gt;
コードチャンクも数式がうまく出ませんので心の目で見てください。&lt;br /&gt;
&lt;span class=&#34;math display&#34;&gt;\[y = N(1,1) + 2*x1 + 2*x2 + 2*x3 + 2*x4\]&lt;/span&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;require(dplyr);require(magrittr)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  要求されたパッケージ dplyr をロード中です&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: パッケージ &amp;#39;dplyr&amp;#39; はバージョン 3.3.1 の R の下で造られました&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
##  次のパッケージを付け加えます: &amp;#39;dplyr&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  以下のオブジェクトは &amp;#39;package:stats&amp;#39; からマスクされています: 
## 
##      filter, lag&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  以下のオブジェクトは &amp;#39;package:base&amp;#39; からマスクされています: 
## 
##      intersect, setdiff, setequal, union&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  要求されたパッケージ magrittr をロード中です&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;nobs &amp;lt;- 100
M &amp;lt;- matrix(c(1, 0.95, 0.95, 0.95,
             0.95, 1, 0.95, 0.95,
             0.95, 0.95, 1, 0.95,
             0.95, 0.95, 0.95, 1), nrow&amp;lt;-4, ncol&amp;lt;-4)
L &amp;lt;- chol(M)
nvars &amp;lt;- dim(L)[1]
set.seed(0)
L %&amp;gt;% 
  t() %*% #help ?&amp;#39;%*%&amp;#39;
  matrix(rnorm(nvars*nobs), nrow=nvars, ncol=nobs) %&amp;gt;% 
  t() %&amp;gt;% 
  data.frame() %&amp;gt;% 
  set_colnames(c(&amp;#39;x1&amp;#39;, &amp;#39;x2&amp;#39;, &amp;#39;x3&amp;#39;, &amp;#39;x4&amp;#39;)) %&amp;gt;% 
  mutate(x0 = 1,
         y = 2*x1+2*x2+2*x3+2*x4+rnorm(nobs,1,1))-&amp;gt; dat
dat %&amp;gt;% head&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##             x1          x2         x3            x4 x0          y
## 1  1.262954285  1.09794024  1.5128002  1.5967999876  1 11.5509799
## 2  0.414641434 -0.08693988 -0.0935600  0.0007692272  1 -0.3494007
## 3 -0.005767173  0.74537397  0.5685444  0.2226740702  1  4.7208311
## 4 -1.147657009 -1.18065851 -1.2159001 -1.2670585379  1 -8.1629265
## 5  0.252223448 -0.03889001  0.2227375 -0.1759908437  1  3.1367865
## 6 -0.224267885 -0.09521274 -0.1192851  0.0634592462  1 -1.6068035&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;vif&#34; class=&#34;section level5&#34;&gt;
&lt;h5&gt;VIF&lt;/h5&gt;
&lt;p&gt;以下のコードでVIFが求められます。多分。&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#cor
cor(dat[,-c(5:7)])&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##           x1        x2        x3        x4
## x1 1.0000000 0.9427774 0.9401316 0.9374005
## x2 0.9427774 1.0000000 0.9355453 0.9400460
## x3 0.9401316 0.9355453 1.0000000 0.9499916
## x4 0.9374005 0.9400460 0.9499916 1.0000000&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#VIF
diag(solve(cor(dat[,-c(5:7)]))) %&amp;gt;% round(2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    x1    x2    x3    x4 
## 12.54 12.32 13.57 13.80&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;section level4&#34;&gt;
&lt;h4&gt;モデル&lt;/h4&gt;
&lt;p&gt;階層ベイズ(係数の事前分布2種)&lt;/p&gt;
&lt;div class=&#34;section level5&#34;&gt;
&lt;h5&gt;事前分布が無情報(デフォルト)&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;data {
  int&amp;lt;lower=0&amp;gt; N;
  int&amp;lt;lower=0&amp;gt; K;
  matrix[N, K] x;
  vector[N] y;
}
parameters {
  vector[K] beta;
  real&amp;lt;lower=0&amp;gt; sigma;
}
model {
  y ~ normal(x * beta , sigma);
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;n010&#34; class=&#34;section level5&#34;&gt;
&lt;h5&gt;事前分布が正規分布N(0,10)&lt;/h5&gt;
&lt;p&gt;正規分布にするとRidge回帰と同じらしい。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;//model部以外同じ
model {
  y ~ normal(x * beta , sigma);
  beta ~ normal(0,10);
  sigma ~ normal(0,100);
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;section level4&#34;&gt;
&lt;h4&gt;結果&lt;/h4&gt;
&lt;p&gt;(ブログ移行するときにデータ無くした。)&lt;/p&gt;
&lt;p&gt;beta[1]が切片,beta[2:5]がx1:x4です。&lt;br /&gt;
beta[1]が1,beta[2:5]は2が真値でした。 どちらのモデルもうまく推定できず、数値見てもほとんどおんなじでした。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;section level4&#34;&gt;
&lt;h4&gt;まとめ&lt;/h4&gt;
&lt;p&gt;betaの制約を見ても明らかですが、 モデルが過学習起こして値が変なとこ飛んでかないようになるだけであって, 真値を正しく推定するようになるわけではないので、やっぱりちゃんと変数選択しよう!&lt;br /&gt;
次回Lasso回帰!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;section level4&#34;&gt;
&lt;h4&gt;参考資料&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;http://www.quantumforest.com/2011/10/simulating-data-following-a-given-covariance-structure/&#34; class=&#34;uri&#34;&gt;http://www.quantumforest.com/2011/10/simulating-data-following-a-given-covariance-structure/&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;http://breakbee.hatenablog.jp/entry/2015/03/08/041411&#34; class=&#34;uri&#34;&gt;http://breakbee.hatenablog.jp/entry/2015/03/08/041411&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;http://www.fisproject.jp/2014/08/r-regression/&#34; class=&#34;uri&#34;&gt;http://www.fisproject.jp/2014/08/r-regression/&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;


&lt;!-- BLOGDOWN-HEAD




/BLOGDOWN-HEAD --&gt;
</description>
    </item>
    
  </channel>
</rss>