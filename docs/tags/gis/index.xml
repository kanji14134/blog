<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Gis on kh-blog</title>
    <link>/blog/tags/gis/</link>
    <description>Recent content in Gis on kh-blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 19 Apr 2017 20:30:40 +0900</lastBuildDate>
    
	<atom:link href="/blog/tags/gis/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>sf 3.4</title>
      <link>/blog/2017/04/sf-3.4/</link>
      <pubDate>Wed, 19 Apr 2017 20:30:40 +0900</pubDate>
      
      <guid>/blog/2017/04/sf-3.4/</guid>
      <description>今話題のsfパッケージ、まさか知らない人はいないでしょう??。
今回はじめて使いましたので、簡単にメモ。
library(dplyr) ## Warning: パッケージ &amp;#39;dplyr&amp;#39; はバージョン 3.4.2 の R の下で造られました ## ## 次のパッケージを付け加えます: &amp;#39;dplyr&amp;#39; ## 以下のオブジェクトは &amp;#39;package:stats&amp;#39; からマスクされています: ## ## filter, lag ## 以下のオブジェクトは &amp;#39;package:base&amp;#39; からマスクされています: ## ## intersect, setdiff, setequal, union library(sf) ## Warning: パッケージ &amp;#39;sf&amp;#39; はバージョン 3.4.4 の R の下で造られました ## Linking to GEOS 3.6.1, GDAL 2.1.3, PROJ 4.9.3 Shapeファイルからの読み込みの例が多かったので、
data.frameから作る場合をやってみます。 irisに適当に座標をつけます。
この場合はst_as_sf()で簡単に作ることができます。 SP*オブジェクトよりもスッキリしてる気がします。
iris_sf_wgs&amp;lt;- iris %&amp;gt;% mutate(x = rnorm(dim(iris)[1],140,1), y = rnorm(dim(iris)[1],35,1)) %&amp;gt;% st_as_sf(coords = c(&amp;quot;x&amp;quot;,&amp;quot;y&amp;quot;), crs = 4326) iris_sf_wgs %&amp;gt;% head() ## Simple feature collection with 6 features and 5 fields ## geometry type: POINT ## dimension: XY ## bbox: xmin: 138.</description>
    </item>
    
  </channel>
</rss>